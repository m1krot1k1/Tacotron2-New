#!/usr/bin/env python3
"""
üß™ –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞ Smart Tuner V2
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –Ω–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞ "–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è + –æ–±—É—á–µ–Ω–∏–µ"
"""

import sys
import os
import subprocess
import time
from datetime import datetime

def test_auto_mode():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞ Smart Tuner V2")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Ñ–∞–π–ª–æ–≤
    required_files = [
        "smart_tuner_main.py",
        "smart_tuner/config.yaml"
    ]
    
    for file_path in required_files:
        if not os.path.exists(file_path):
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª: {file_path}")
            return False
    
    print("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º help
        python_path = "venv/bin/python" if os.path.exists("venv/bin/python") else sys.executable
        result = subprocess.run([
            python_path, "smart_tuner_main.py", "--help"
        ], capture_output=True, text=True, timeout=30)
        
        if "auto" in result.stdout:
            print("‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö")
        else:
            print("‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ help")
            print(f"Stderr: {result.stderr[:200]}")
            if result.stdout:
                print(f"Stdout: {result.stdout[:200]}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    print("üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...")
    
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –∏–º–ø–æ—Ä—Ç–∞
        sys.path.append(os.path.dirname(os.path.abspath(__file__)))
        from smart_tuner_main import SmartTunerMain
        
        # –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        smart_tuner = SmartTunerMain("smart_tuner/config.yaml")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–µ—Ç–æ–¥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞
        if hasattr(smart_tuner, 'run_automatic_mode'):
            print("‚úÖ –ú–µ—Ç–æ–¥ run_automatic_mode –Ω–∞–π–¥–µ–Ω")
        else:
            print("‚ùå –ú–µ—Ç–æ–¥ run_automatic_mode –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
            
        print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    print("=" * 60)
    print("üéâ –í–°–ï –¢–ï–°–¢–´ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –†–ï–ñ–ò–ú–ê –ü–†–û–ô–î–ï–ù–´!")
    print("=" * 60)
    print("üìã –ß—Ç–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:")
    print("  ‚úÖ –ù–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤")
    print("  ‚úÖ –ê—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏")
    print("  ‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π")
    print("  ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Smart Tuner")
    print("  ‚úÖ –ú–µ—Ç–æ–¥ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞")
    
    print("\nüöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./install.sh ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ 3 ‚Üí –≤—ã–±–µ—Ä–∏—Ç–µ 1")
    
    return True

def demo_command_line():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    print("\n" + "=" * 60)
    print("üìö –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –†–ï–ñ–ò–ú–ê")
    print("=" * 60)
    
    examples = [
        ("ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - 15 trials):", 
         "python smart_tuner_main.py --mode auto"),
        ("üéØ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º —Å 20 trials:", 
         "python smart_tuner_main.py --mode auto --trials 20"),
        ("‚ö° –ë—ã—Å—Ç—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º (10 trials):", 
         "python smart_tuner_main.py --mode auto --trials 10"),
        ("üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π:", 
         "python smart_tuner_main.py --mode auto --config smart_tuner/config_improved.yaml --trials 25")
    ]
    
    for description, command in examples:
        print(f"\n{description}")
        print(f"  $ {command}")
    
    print("\nüí° –°–û–í–ï–¢: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –≤ install.sh –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞!")

if __name__ == "__main__":
    print(f"üïê –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    success = test_auto_mode()
    
    if success:
        demo_command_line()
        
    sys.exit(0 if success else 1) 