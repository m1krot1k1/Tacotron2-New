# Проанализируем собранную информацию и создадим таблицу с основными проблемами и решениями DDC Loss

import pandas as pd

data = [
    {
        "Проблема": "Несоответствие размеров декодеров",
        "Описание": "DDC использует два декодера с разными reduction factors, что приводит к векторам attention разной длины",
        "Причина": "Coarse decoder создает короткие векторы, Fine decoder - длинные",
        "Решение": "Интерполяция attention векторов coarse декодера до длины fine декодера",
        "Сложность": "Средняя",
        "Влияние_на_качество": "Умеренное"
    },
    {
        "Проблема": "Переменная длина аудио последовательностей",
        "Описание": "Mel-spectrograms имеют разную временную длину для разных аудио",
        "Причина": "Естественная вариативность длины речевых сегментов",
        "Решение": "Padding/truncation до максимальной длины в batch",
        "Сложность": "Низкая",
        "Влияние_на_качество": "Высокое"
    },
    {
        "Проблема": "Потеря информации при обрезании",
        "Описание": "При приведении к минимальному размеру теряется часть временной последовательности",
        "Причина": "Принудительное обрезание до min(len1, len2)",
        "Решение": "Умное выравнивание с сохранением важной информации",
        "Сложность": "Высокая",
        "Влияние_на_качество": "Высокое"
    },
    {
        "Проблема": "Некорректное выравнивание при batching",
        "Описание": "Проблемы с созданием батчей из последовательностей разной длины",
        "Причина": "Необходимость создания прямоугольных тензоров",
        "Решение": "Bucket batching - группировка по схожей длине",
        "Сложность": "Средняя",
        "Влияние_на_качество": "Среднее"
    },
    {
        "Проблема": "Неэффективное использование памяти",
        "Описание": "Избыточный padding приводит к лишним вычислениям",
        "Причина": "Padding до максимальной длины в датасете",
        "Решение": "Динамический padding только до максимума в текущем batch",
        "Сложность": "Средняя",
        "Влияние_на_качество": "Низкое"
    }
]

df = pd.DataFrame(data)
print("Основные проблемы DDC Loss и их решения:")
print("=" * 60)
for idx, row in df.iterrows():
    print(f"\n{idx+1}. {row['Проблема']}")
    print(f"   Описание: {row['Описание']}")
    print(f"   Причина: {row['Причина']}")
    print(f"   Решение: {row['Решение']}")
    print(f"   Сложность реализации: {row['Сложность']}")
    print(f"   Влияние на качество: {row['Влияние_на_качество']}")

# Сохраним в CSV для дальнейшего использования
df.to_csv('ddc_loss_problems_solutions.csv', index=False, encoding='utf-8')
print(f"\n\nТаблица сохранена в файл: ddc_loss_problems_solutions.csv")
print(f"Размер таблицы: {df.shape}")