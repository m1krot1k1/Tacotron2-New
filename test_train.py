#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–∏ train –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from hparams import create_hparams
from train import train
import torch

def test_train():
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é train...")
    
    # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–µ hparams
    hparams = create_hparams()
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    hparams.epochs = 2  # –í—Å–µ–≥–æ 2 —ç–ø–æ—Ö–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
    hparams.batch_size = 4  # –ú–∞–ª–µ–Ω—å–∫–∏–π batch
    hparams.validation_freq = 10  # –ß–∞—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    
    print(f"üìä –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ—Å—Ç–∞:")
    print(f"   - epochs: {hparams.epochs}")
    print(f"   - batch_size: {hparams.batch_size}")
    print(f"   - validation_freq: {hparams.validation_freq}")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    output_dir = "test_output"
    log_dir = os.path.join(output_dir, "logs")
    os.makedirs(log_dir, exist_ok=True)
    
    try:
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º train...")
        result = train(
            output_directory=output_dir,
            log_directory=log_dir,
            checkpoint_path=None,
            warm_start=False,
            ignore_mmi_layers=False,
            ignore_gst_layers=False,
            ignore_tsgst_layers=False,
            n_gpus=1,
            rank=0,
            group_name="test",
            hparams=hparams
        )
        
        print(f"‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        return result
        
    except Exception as e:
        import traceback
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print(f"Traceback: {traceback.format_exc()}")
        return None

if __name__ == "__main__":
    test_train() 