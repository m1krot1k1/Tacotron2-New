#!/usr/bin/env python3
"""–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Smart Tuner V2"""

import subprocess
import time
import os

def test_basic_training():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è...")
    
    cmd = [
        'python', 'train.py',
        '-o', 'output/test_basic',
        '-l', 'output/test_basic/logs',
        '--hparams=epochs=1,iters_per_checkpoint=5,batch_size=2'
    ]
    
    try:
        result = subprocess.run(cmd, timeout=60, capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ –ë–∞–∑–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—É—á–µ–Ω–∏—è: {result.stderr}")
            return False
    except subprocess.TimeoutExpired:
        print("‚è∞ –û–±—É—á–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—Å–∏–ª–æ —Ç–∞–π–º–∞—É—Ç (60 —Å–µ–∫)")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False

def test_smart_tuner():
    """–¢–µ—Å—Ç Smart Tuner"""
    print("\nüöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Smart Tuner...")
    
    cmd = ['python', 'smart_tuner_main.py', '--mode', 'train']
    
    try:
        result = subprocess.run(cmd, timeout=30, capture_output=True, text=True)
        if "–ü—Ä–æ—Ü–µ—Å—Å –æ–±—É—á–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω" in result.stderr:
            print("‚úÖ Smart Tuner –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è")
            return True
        else:
            print(f"‚ùå Smart Tuner –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Smart Tuner: {e}")
        return False

def main():
    print("üî¨ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –æ–±—É—á–µ–Ω–∏—è Tacotron2 + Smart Tuner V2")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    os.makedirs("output/test_basic", exist_ok=True)
    os.makedirs("output/test_basic/logs", exist_ok=True)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    basic_ok = test_basic_training()
    smart_ok = test_smart_tuner()
    
    print("\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"  –ë–∞–∑–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ: {'‚úÖ' if basic_ok else '‚ùå'}")
    print(f"  Smart Tuner: {'‚úÖ' if smart_ok else '‚ùå'}")
    
    if basic_ok and smart_ok:
        print("\nüéâ –í—Å–µ —Å–∏—Å—Ç–µ–º—ã –≥–æ—Ç–æ–≤—ã –∫ —Ä–∞–±–æ—Ç–µ!")
        print("\n–î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print("  python smart_tuner_main.py --mode optimize --trials 10")
    else:
        print("\n‚ö†Ô∏è –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã, —Ç—Ä–µ–±—É—é—â–∏–µ —Ä–µ—à–µ–Ω–∏—è")

if __name__ == '__main__':
    main()
