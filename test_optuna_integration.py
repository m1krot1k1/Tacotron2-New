#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Optuna Dashboard
–ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–µ–±–æ–ª—å—à–æ–π —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –ø–æ–ø–∞–¥–∞—é—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
"""

import os
import sys
import logging
from smart_tuner_main import SmartTunerMain

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_optuna_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Optuna Dashboard"""
    
    logger.info("üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å Optuna...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Smart Tuner
        tuner = SmartTunerMain("smart_tuner/config.yaml")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–µ–±–æ–ª—å—à—É—é –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é (2 trials –¥–ª—è —Ç–µ—Å—Ç–∞)
        logger.info("–ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Å 2 trials –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...")
        best_params = tuner.run_optimization(n_trials=2)
        
        logger.info(f"‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω. –õ—É—á—à–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: {best_params}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞
        db_path = "smart_tuner/optuna_studies.db"
        if os.path.exists(db_path):
            size = os.path.getsize(db_path)
            logger.info(f"‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Optuna —Å–æ–∑–¥–∞–Ω–∞: {db_path} ({size} –±–∞–π—Ç)")
        else:
            logger.error("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Optuna –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            
        logger.info("üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Optuna Dashboard: http://localhost:5002")
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ: {e}")
        raise

if __name__ == "__main__":
    test_optuna_integration() 