#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Ç—Ä–∏–∫ –≤ MLflow
"""

import mlflow
import os

def check_mlflow_metrics():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –≤ MLflow"""
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤
        experiments = mlflow.search_experiments()
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(experiments)} —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –≤ MLflow:")
        
        for exp in experiments:
            print(f"\nüî¨ –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç: {exp.name}")
            print(f"   ID: {exp.experiment_id}")
            
            # –ü–æ–ª—É—á–∞–µ–º runs –¥–ª—è —ç—Ç–æ–≥–æ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞
            runs = mlflow.search_runs(exp.experiment_id, max_results=5)
            
            if not runs.empty:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(runs)} runs:")
                
                for idx, run in runs.iterrows():
                    run_id = run['run_id']
                    status = run['status']
                    start_time = run['start_time']
                    
                    print(f"\n      üèÉ Run {run_id[:8]}...")
                    print(f"         –°—Ç–∞—Ç—É—Å: {status}")
                    print(f"         –í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {start_time}")
                    
                    # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è —ç—Ç–æ–≥–æ run
                    try:
                        client = mlflow.tracking.MlflowClient()
                        metrics = client.get_run(run_id).data.metrics
                        
                        if metrics:
                            print(f"         üìà –ú–µ—Ç—Ä–∏–∫–∏ ({len(metrics)}):")
                            for metric_name, metric_value in metrics.items():
                                print(f"            ‚Ä¢ {metric_name}: {metric_value:.4f}")
                        else:
                            print(f"         ‚ö†Ô∏è –ú–µ—Ç—Ä–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                            
                    except Exception as e:
                        print(f"         ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫: {e}")
            else:
                print(f"   ‚ö†Ô∏è Runs –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MLflow: {e}")

if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ MLflow –º–µ—Ç—Ä–∏–∫...")
    check_mlflow_metrics() 