#!/usr/bin/env python3
"""
–ü–∞—Ç—á –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –æ–±—É—á–µ–Ω–∏—è
–û—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∞–Ω–∞–ª–∏–∑–µ MLflow –¥–∞–Ω–Ω—ã—Ö
"""

import yaml
import shutil
from pathlib import Path

def apply_fixes():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫ Smart Tuner"""
    
    print("üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Smart Tuner...")
    
    # 1. –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config_path = Path("smart_tuner/config.yaml")
    backup_path = Path("smart_tuner/config_backup.yaml")
    
    if config_path.exists():
        shutil.copy2(config_path, backup_path)
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_path}")
    
    # 2. –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open(config_path, 'r') as f:
        config = yaml.safe_load(f)
    
    # 3. –ü—Ä–∏–º–µ–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    print("üìù –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π —Å–æ–≤–µ—Ç–Ω–∏–∫
    if 'adaptive_advisor' not in config:
        config['adaptive_advisor'] = {}
    
    config['adaptive_advisor']['enabled'] = False
    config['adaptive_advisor']['min_history_for_decision'] = 100  # –£–≤–µ–ª–∏—á–µ–Ω–æ
    config['adaptive_advisor']['evaluation_window'] = 50  # –£–≤–µ–ª–∏—á–µ–Ω–æ
    
    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ø–æ—Ä–æ–≥–∏ –¥–ª—è TTS
    if 'diagnostics' not in config['adaptive_advisor']:
        config['adaptive_advisor']['diagnostics'] = {}
    
    diag = config['adaptive_advisor']['diagnostics']
    
    if 'stagnation' not in diag:
        diag['stagnation'] = {}
    diag['stagnation']['window_size'] = 100  # –ë—ã–ª–æ 20
    diag['stagnation']['min_delta'] = 0.001  # –ë—ã–ª–æ 0.005
    
    if 'instability' not in diag:
        diag['instability'] = {}
    diag['instability']['grad_norm_threshold'] = 200.0  # –ë—ã–ª–æ 50.0
    
    if 'overfitting' not in diag:
        diag['overfitting'] = {}
    diag['overfitting']['threshold'] = 5.0  # –ë—ã–ª–æ 0.1
    diag['overfitting']['window_size'] = 30  # –ë—ã–ª–æ 10
    
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    config['training_safety'] = {
        'enabled': True,
        'min_training_hours': 4.0,
        'max_training_hours': 15.0,
        'min_training_steps': 5000,
        'max_validation_loss': 100.0
    }
    
    # –£–ª—É—á—à–∞–µ–º early stopping
    config['early_stopping'] = {
        'enabled': True,
        'patience': 100,  # –£–≤–µ–ª–∏—á–µ–Ω–æ —Å 20
        'min_delta': 0.001,  # –£–º–µ–Ω—å—à–µ–Ω–æ —Å 0.01
        'monitor': 'validation.loss',
        'mode': 'min'
    }
    
    # 4. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open(config_path, 'w') as f:
        yaml.dump(config, f, indent=2, default_flow_style=False)
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    
    # 5. –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
    with open("CHANGES_APPLIED.md", 'w') as f:
        f.write("""# –ü—Ä–∏–º–µ–Ω–µ–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Smart Tuner

## –ò–∑–º–µ–Ω–µ–Ω–∏—è:
1. ‚ùå –û—Ç–∫–ª—é—á–µ–Ω –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π Adaptive Advisor
2. üìà –£–≤–µ–ª–∏—á–µ–Ω—ã –ø–æ—Ä–æ–≥–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–ª—è TTS
3. ‚è∞ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞—â–∏—Ç–∞ –æ—Ç —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–Ω–µ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
4. üõ°Ô∏è –î–æ–±–∞–≤–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –æ–±—É—á–µ–Ω–∏—è

## –ù–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:
- –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –æ–±—É—á–µ–Ω–∏—è: 4 —á–∞—Å–∞
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π validation loss: 100.0
- –¢–µ—Ä–ø–µ–Ω–∏–µ early stopping: 100 —ç–ø–æ—Ö
- –ü–æ—Ä–æ–≥ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏: 200.0

## –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ: `python smart_tuner_main.py`
2. –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ MLflow: http://localhost:5000
3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ 6 —á–∞—Å–æ–≤

""")
    
    print("üìÑ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: CHANGES_APPLIED.md")
    print("üéØ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ.")

if __name__ == "__main__":
    apply_fixes()
