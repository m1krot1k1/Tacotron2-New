#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ _should_restart_training TTS
"""

import yaml
from datetime import datetime, timedelta
import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from smart_tuner_main import SmartTunerMain

def test_restart_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –ª–æ–≥–∏–∫—É –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏ _should_restart_training")
    print("=" * 60)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä SmartTunerMain
    smart_tuner = SmartTunerMain()
    smart_tuner.training_start_time = datetime.now()
    
    # –¢–ï–°–¢ 1: –†–∞–Ω–Ω–µ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ (–∫–∞–∫ –±—ã–ª–æ –≤ –ø—Ä–æ–±–ª–µ–º–Ω–æ–º —Å–ª—É—á–∞–µ)
    print("\nüîç –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —Ä–∞–Ω–Ω–µ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤ _should_restart_training")
    early_metrics = {
        'val_loss': 2.531,
        'attention_alignment_score': 0.392,
        'gate_accuracy': 0.601,
        'mel_quality_score': 0.475,
        'training_loss': 2.5,
        'initial_training_loss': 2.5,
        'validation.step': 0  # –ü—Ä–æ–±–ª–µ–º–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è
    }
    
    result1 = smart_tuner._should_restart_training(early_metrics)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ)' if result1 else 'üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞'}")
    assert result1, "–¢–µ—Å—Ç 1 –ø—Ä–æ–≤–∞–ª–µ–Ω: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ)"
    
    # –¢–ï–°–¢ 2: –ß–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç (–≤—Å–µ –µ—â–µ —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ)
    print("\nüîç –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç")
    smart_tuner.training_start_time = datetime.now() - timedelta(minutes=5)
    
    result2 = smart_tuner._should_restart_training(early_metrics)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ)' if result2 else 'üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞'}")
    assert result2, "–¢–µ—Å—Ç 2 –ø—Ä–æ–≤–∞–ª–µ–Ω: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ)"
    
    # –¢–ï–°–¢ 3: –ß–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç —Å –ø–ª–æ—Ö–∏–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏
    print("\nüîç –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç —Å –ø–ª–æ—Ö–∏–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏")
    smart_tuner.training_start_time = datetime.now() - timedelta(minutes=15)
    
    bad_metrics = {
        'val_loss': 50.0,      # –û—á–µ–Ω—å –ø–ª–æ—Ö–æ
        'attention_alignment_score': 0.1,   # –û—á–µ–Ω—å –ø–ª–æ—Ö–æ
        'gate_accuracy': 0.2,   # –û—á–µ–Ω—å –ø–ª–æ—Ö–æ
        'mel_quality_score': 0.1,  # –û—á–µ–Ω—å –ø–ª–æ—Ö–æ
        'training_loss': 45.0,
        'initial_training_loss': 45.5,  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å
        'validation.step': 5    # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —à–∞–≥–æ–≤
    }
    
    result3 = smart_tuner._should_restart_training(bad_metrics)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫' if result3 else 'üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞'}")
    # –ü—Ä–∏ –æ—á–µ–Ω—å –ø–ª–æ—Ö–∏—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö –î–û–õ–ñ–ï–ù –±—ã—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫
    
    # –¢–ï–°–¢ 4: –ß–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç —Å —Ö–æ—Ä–æ—à–∏–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏
    print("\nüîç –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç —Å —Ö–æ—Ä–æ—à–∏–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏")
    
    good_metrics = {
        'val_loss': 5.0,       # –•–æ—Ä–æ—à–æ
        'attention_alignment_score': 0.8,   # –•–æ—Ä–æ—à–æ
        'gate_accuracy': 0.9,   # –•–æ—Ä–æ—à–æ
        'mel_quality_score': 0.7,  # –•–æ—Ä–æ—à–æ
        'training_loss': 3.0,
        'initial_training_loss': 10.0,  # –•–æ—Ä–æ—à–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: 70%
        'validation.step': 5    # –î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —à–∞–≥–æ–≤
    }
    
    result4 = smart_tuner._should_restart_training(good_metrics)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {'üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫' if result4 else 'üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞'}")
    assert not result4, "–¢–µ—Å—Ç 4 –ø—Ä–æ–≤–∞–ª–µ–Ω: –ø—Ä–∏ —Ö–æ—Ä–æ—à–∏—Ö –º–µ—Ç—Ä–∏–∫–∞—Ö –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞"
    
    print("\n" + "=" * 60)
    print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –õ–æ–≥–∏–∫–∞ _should_restart_training –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞")
    print("\nüìã –°–í–û–î–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:")
    print("1. ‚è∞ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –µ—Å–ª–∏ < 10 –º–∏–Ω—É—Ç")
    print("2. üìä –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –µ—Å–ª–∏ < 3 validation —à–∞–≥–∞")
    print("3. üéØ –£–º–Ω–∞—è –ª–æ–≥–∏–∫–∞ –æ—Ü–µ–Ω–∫–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º")
    print("4. üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è")
    
    return True

if __name__ == "__main__":
    test_restart_logic() 