#!/usr/bin/env python3
"""
üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –û–ë–£–ß–ï–ù–ò–Ø
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ NaN/Inf –∏ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–±–ª–µ–º

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
python emergency_recovery.py
"""

import os
import sys
import torch
import argparse
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from hparams import create_hparams
from smart_tuner_main import SmartTunerMain
from smart_tuner.alert_manager import AlertManager


def create_emergency_hparams():
    """
    üõ°Ô∏è –°–æ–∑–¥–∞–µ—Ç –£–õ–¨–¢–†–ê-–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    """
    hparams = create_hparams()
    
    # üî• –†–ê–î–ò–ö–ê–õ–¨–ù–û–ï —Å–Ω–∏–∂–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
    hparams.learning_rate = 1e-6          # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π learning rate
    hparams.batch_size = 2                # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π batch size
    hparams.grad_clip_thresh = 0.01       # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å—Ç—Ä–æ–≥–æ–µ –∫–ª–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
    
    # üéØ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø guided attention
    hparams.use_guided_attn = True
    hparams.guide_loss_weight = 50.0      # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–µ—Å guided attention
    hparams.guide_loss_initial_weight = 50.0
    
    # üõ°Ô∏è –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å
    hparams.p_attention_dropout = 0.001   # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π dropout
    hparams.p_decoder_dropout = 0.001
    hparams.gate_threshold = 0.3          # –°—Ç—Ä–æ–≥–∏–π gate threshold
    
    # üö´ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    hparams.use_mmi = False
    hparams.use_audio_quality_enhancement = False
    hparams.fp16_run = False              # –û—Ç–∫–ª—é—á–∞–µ–º fp16 –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
    
    # üìä –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –ø—Ä–æ–≤–µ—Ä–∫–∏
    hparams.iters_per_checkpoint = 100    # –ß–∞—Å—Ç—ã–µ —á–µ–∫–ø–æ–∏–Ω—Ç—ã
    hparams.validation_interval = 50      # –ß–∞—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    
    print("üõ°Ô∏è –£–õ–¨–¢–†–ê-–ë–ï–ó–û–ü–ê–°–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´ –°–û–ó–î–ê–ù–´:")
    print(f"  üî• learning_rate: {hparams.learning_rate}")
    print(f"  üì¶ batch_size: {hparams.batch_size}")
    print(f"  üéØ guide_loss_weight: {hparams.guide_loss_weight}")
    print(f"  ‚úÇÔ∏è grad_clip_thresh: {hparams.grad_clip_thresh}")
    print(f"  üõ°Ô∏è use_guided_attn: {hparams.use_guided_attn}")
    print(f"  üö´ fp16_run: {hparams.fp16_run}")
    
    return hparams


def send_recovery_notification():
    """
    üì± –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    """
    try:
        alert_manager = AlertManager()
        
        message = "üö® **–≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –ó–ê–ü–£–©–ï–ù–û!**\n\n"
        message += "üõ°Ô∏è **–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã –£–õ–¨–¢–†–ê-–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:**\n"
        message += "‚Ä¢ üî• Learning rate: 1e-6 (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π)\n"
        message += "‚Ä¢ üì¶ Batch size: 2 (–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π)\n"
        message += "‚Ä¢ üéØ Guided attention: 50.0 (–º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π)\n"
        message += "‚Ä¢ ‚úÇÔ∏è Grad clipping: 0.01 (—Å—Ç—Ä–æ–≥–∏–π)\n"
        message += "‚Ä¢ üö´ FP16: –æ—Ç–∫–ª—é—á–µ–Ω\n"
        message += "‚Ä¢ üõ°Ô∏è –í—Å–µ –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã\n\n"
        message += "üéØ **–¶–µ–ª—å:** –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å attention –∏ —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å loss\n"
        message += "‚è∞ **–í—Ä–µ–º—è:** –ú–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å—Å—è –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è\n"
        message += "üöÄ **–û–±—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç—É–µ—Ç –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–º —Ä–µ–∂–∏–º–µ!**"
        
        alert_manager.send_message(message, priority='critical')
        print("üì± –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
        
    except Exception as e:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: {e}")


def main():
    """
    üö® –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
    """
    parser = argparse.ArgumentParser(description='–≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è')
    parser.add_argument('--checkpoint', type=str, help='–ü—É—Ç—å –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —á–µ–∫–ø–æ–∏–Ω—Ç—É')
    parser.add_argument('--notify', action='store_true', help='–û—Ç–ø—Ä–∞–≤–∏—Ç—å Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ')
    
    args = parser.parse_args()
    
    print("üö®" + "="*60)
    print("üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï –û–ë–£–ß–ï–ù–ò–Ø TACOTRON2")
    print("üö®" + "="*60)
    print("üõ°Ô∏è –ê–∫—Ç–∏–≤–∏—Ä—É—é –£–õ–¨–¢–†–ê-–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã...")
    print("üéØ –¶–µ–ª—å: –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å attention –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å loss")
    print("‚è∞ –ü—Ä–æ—Ü–µ—Å—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏, –Ω–æ –±—É–¥–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω—ã–º")
    print("="*60)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–æ
    if args.notify:
        send_recovery_notification()
    
    # –°–æ–∑–¥–∞–µ–º —É–ª—å—Ç—Ä–∞-–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
    hparams = create_emergency_hparams()
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —á–µ–∫–ø–æ–∏–Ω—Ç –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω
    checkpoint_path = args.checkpoint
    if checkpoint_path and not os.path.exists(checkpoint_path):
        print(f"‚ö†Ô∏è –ß–µ–∫–ø–æ–∏–Ω—Ç {checkpoint_path} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ù–∞—á–∏–Ω–∞—é —Å –Ω—É–ª—è.")
        checkpoint_path = None
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Smart Tuner
        smart_tuner = SmartTunerMain()
        smart_tuner.initialize_components()
        
        print("\nüöÄ –ó–∞–ø—É—Å–∫–∞—é —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ...")
        print("üí° –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:")
        print("   - –ú–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å attention")
        print("   - –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å guided attention –≤–µ—Å")
        print("   - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö")
        print("   - –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ–≥—Ä–µ—Å—Å–µ")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—É—á–µ–Ω–∏–µ —Å —É–ª—å—Ç—Ä–∞-–±–µ–∑–æ–ø–∞—Å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        results = smart_tuner.run_single_training(
            hyperparams=hparams.__dict__
        )
        
        print("\n‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {results}")
        
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –≠–∫—Å—Ç—Ä–µ–Ω–Ω–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏: {e}")
        import traceback
        print(f"   Traceback: {traceback.format_exc()}")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        try:
            alert_manager = AlertManager()
            error_message = f"‚ùå **–û–®–ò–ë–ö–ê –≠–ö–°–¢–†–ï–ù–ù–û–ì–û –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–Ø**\n\n"
            error_message += f"üî• **–û—à–∏–±–∫–∞:** {str(e)}\n"
            error_message += f"üõ†Ô∏è **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:** –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n"
            error_message += f"üìû **–¢—Ä–µ–±—É–µ—Ç—Å—è:** –†—É—á–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ"
            
            alert_manager.send_message(error_message, priority='critical')
        except:
            pass
        
        sys.exit(1)


if __name__ == "__main__":
    main() 