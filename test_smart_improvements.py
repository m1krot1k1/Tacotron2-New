#!/usr/bin/env python3
'''
üß™ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —É–ª—É—á—à–µ–Ω–∏–π Smart Tuner V2
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —É–ª—É—á—à–µ–Ω–∏–π
'''

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from smart_tuner_main import SmartTunerMain

def test_improvements():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π Smart Tuner V2...")
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
        smart_tuner = SmartTunerMain("smart_tuner/config.yaml")
        smart_tuner.initialize_components()
        
        print("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Å —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–º–∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏
        test_metrics = {
            'val_loss': 5.0,
            'attention_alignment_score': 0.45,  # –¢–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å
            'gate_accuracy': 0.55,  # –¢–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å
            'mel_quality_score': 0.35,  # –¢–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å
            'training_loss': 4.8,
            'initial_training_loss': 6.0
        }
        
        quality_passed = smart_tuner._check_tts_quality_thresholds(test_metrics)
        
        if quality_passed:
            print("‚úÖ –ù–æ–≤—ã–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ö†Ô∏è –ö—Ä–∏—Ç–µ—Ä–∏–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –≤—Å–µ –µ—â–µ —Å–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∏–µ")
            
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
        should_restart = smart_tuner._should_restart_training(test_metrics)
        
        if not should_restart:
            print("‚úÖ –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å—Ç–∞–ª–∞ –º–µ–Ω–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–π")
        else:
            print("‚ö†Ô∏è –õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –≤—Å–µ –µ—â–µ —Å–ª–∏—à–∫–æ–º —Å—Ç—Ä–æ–≥–∞—è")
            
        # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–∑–∏—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        composite_score = smart_tuner.optimization_engine.calculate_composite_tts_objective(test_metrics)
        
        if 0.01 <= composite_score <= 10.0:
            print(f"‚úÖ –ö–æ–º–ø–æ–∑–∏—Ç–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ: {composite_score:.4f}")
        else:
            print(f"‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∫–æ–º–ø–æ–∑–∏—Ç–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π: {composite_score}")
            
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –£–ª—É—á—à–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

if __name__ == "__main__":
    success = test_improvements()
    sys.exit(0 if success else 1)
