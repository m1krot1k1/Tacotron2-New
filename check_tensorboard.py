#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Ç—Ä–∏–∫ –≤ TensorBoard
"""

import os
import time
from tensorboard.backend.event_processing.event_accumulator import EventAccumulator

def check_tensorboard_logs(log_dir="logs"):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –≤ TensorBoard –ª–æ–≥–∞—Ö"""
    
    if not os.path.exists(log_dir):
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {log_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ event —Ñ–∞–π–ª—ã
    event_files = [f for f in os.listdir(log_dir) if f.startswith('events.out.tfevents')]
    
    if not event_files:
        print(f"‚ùå Event —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ {log_dir}")
        return
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(event_files)} event —Ñ–∞–π–ª–æ–≤:")
    
    for event_file in event_files:
        event_path = os.path.join(log_dir, event_file)
        file_size = os.path.getsize(event_path)
        mod_time = time.ctime(os.path.getmtime(event_path))
        
        print(f"\nüìÅ {event_file}")
        print(f"   –†–∞–∑–º–µ—Ä: {file_size} –±–∞–π—Ç")
        print(f"   –í—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è: {mod_time}")
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º event —Ñ–∞–π–ª
            ea = EventAccumulator(event_path)
            ea.Reload()
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Å–∫–∞–ª—è—Ä–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
            scalar_tags = ea.Tags()['scalars']
            
            if scalar_tags:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(scalar_tags)} –º–µ—Ç—Ä–∏–∫:")
                for tag in sorted(scalar_tags):
                    events = ea.Scalars(tag)
                    if events:
                        latest_value = events[-1].value
                        latest_step = events[-1].step
                        print(f"      ‚Ä¢ {tag}: {latest_value:.4f} (—à–∞–≥ {latest_step})")
            else:
                print(f"   ‚ö†Ô∏è –°–∫–∞–ª—è—Ä–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

if __name__ == "__main__":
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ TensorBoard –ª–æ–≥–æ–≤...")
    check_tensorboard_logs() 